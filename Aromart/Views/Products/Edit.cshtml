@model Aromart.Models.product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


<div class="center_div">
    <h4>pProduct Details</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.productName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.productName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.productBrand)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.productBrand)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.productDesc)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.productDesc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.productPrice)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.productPrice)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.productImg)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.productImg)
        </dd>

    </dl>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal center_div">
        <h4>product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.productId)

        <div class="form-group">
            @Html.LabelFor(model => model.productName, labelText: "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productBrand, labelText: "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.productBrand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productBrand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.productDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productPrice, labelText: "Price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.productImg, labelText: "Image Link", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.productImg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productImg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-block btn-primary" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
